ARG BASE_CONTAINER={{ base }}
FROM $BASE_CONTAINER

LABEL hash={{ hash }}

ARG NB_USER="jovyan"
ARG NB_UID="1000"
ARG NB_GID="100"

{% for f in add_files %}ADD {{f.key}} {{f.value}}
{% endfor %}

ENV DEBIAN_FRONTEND=noninteractive \
    CONDA_DIR=/opt/conda \
    SHELL=/bin/bash \
    NB_USER=$NB_USER \
    NB_UID=$NB_UID \
    NB_GID=$NB_GID \
    LC_ALL=en_US.UTF-8 \
    LANG=en_US.UTF-8 \
    LANGUAGE=en_US.UTF-8

{% set indent = joiner(' \\\n    ') %}ENV {% for v in env %}{{ indent() }}{{ v.key }}={% if v.value %}{{v.value}}{% endif %}{% endfor %}

USER root

RUN apt-get update && \
    apt-get -y install software-properties-common && \
    add-apt-repository ppa:apt-fast/stable && \
    apt-get update && \
    apt-get -y install apt-fast && \
    apt-fast update && \
    apt-fast install -yq --no-install-recommends {% for package in apt %}{{ package.key }} {% endfor %} && \
    rm -rf /var/lib/apt/lists/*

RUN echo "en_US.UTF-8 UTF-8" > /etc/locale.gen && \
    locale-gen

# Create NB_USER wtih name jovyan user with UID=1000 and in the 'users' group
# and make sure these dirs are writable by the `users` group.
RUN echo "auth requisite pam_deny.so" >> /etc/pam.d/su && \
    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \
    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \
    useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \
    mkdir -p $CONDA_DIR && \
    chown $NB_USER:$NB_GID $CONDA_DIR && \
    chmod g+w /etc/passwd && \
    fix-permissions $HOME && \
    fix-permissions "$(dirname $CONDA_DIR)"

USER $NB_UID
WORKDIR $HOME

# Setup work directory for backward-compatibility
RUN mkdir /home/$NB_USER/work && \
    fix-permissions /home/$NB_USER

# Install conda as jovyan and check the md5 sum provided on the download site
# Install all conda and pip packages
# Clear all temporary and auxiliary files to minimize image size
RUN cd /tmp && \
    wget --quiet https://repo.continuum.io/miniconda/Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "0dba759b8ecfc8948f626fa18785e3d8 *Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh" | md5sum -c - && \
    /bin/bash Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh -f -b -p $CONDA_DIR && \
    rm Miniconda3-${MINICONDA_VERSION}-Linux-x86_64.sh && \
    echo "conda ${CONDA_VERSION}" >> $CONDA_DIR/conda-meta/pinned && \
    {% set indent = joiner(' && \\\n    ') %}{% for channel in conda_channels %}{{ indent() | safe }}$CONDA_DIR/bin/conda config --system --prepend channels {{ channel.key }}{% endfor %} && \
    $CONDA_DIR/bin/conda config --system --set auto_update_conda false && \
    $CONDA_DIR/bin/conda config --system --set show_channel_urls true && \
    $CONDA_DIR/bin/conda config --system --set channel_priority strict && \
    $CONDA_DIR/bin/conda install pycryptosat && \
    $CONDA_DIR/bin/conda install -y {% for package in conda %}{{ package.key }}{% if package.value %}={{package.value}}{% endif %} {% endfor %}&& \
    pip install {% for package in pip %}{{ package.key }}{% if package.value %}=={{package.value}}{% endif %} {% endfor %}&& \
    $CONDA_DIR/bin/conda list python | grep '^python ' | tr -s ' ' | cut -d '.' -f 1,2 | sed 's/$/.*/' >> $CONDA_DIR/conda-meta/pinned && \
    $CONDA_DIR/bin/conda list tini | grep tini | tr -s ' ' | cut -d ' ' -f 1,2 >> $CONDA_DIR/conda-meta/pinned && \
    npm cache clean --force && \
    jupyter notebook --generate-config && \
    rm -rf $CONDA_DIR/share/jupyter/lab/staging && \
    conda clean --all -f -y && \
    rm -rf /home/$NB_USER/.cache/yarn && \
    find /opt/conda/ -follow -type f -name '*.a' -delete && \
    find /opt/conda/ -follow -type f -name '*.pyc' -delete && \
    find /opt/conda/ -follow -type f -name '*.js.map' -delete && \
    fix-permissions $CONDA_DIR && \
    fix-permissions /home/$NB_USER

# Installation scripts
{% for s in scripts %}{{ s | dockerfileBlock('RUN') | safe }}{% endfor %}

RUN jupyter labextension install --no-build {% for package in labextensions %}{{ package.key }}{% if package.value %}@{{package.value}}{% endif %} {% endfor %}&& \
    jupyter lab build --dev-build=False && \
    npm cache clean --force

# Add symbolic link to the shared filesystem
RUN ln -s /opt/shared shared

# Fix permissions on /etc/jupyter as root
USER root
RUN fix-permissions /etc/jupyter/

# Switch back to jovyan to avoid accidental container runs as root
USER $NB_UID

# Configure container startup
EXPOSE 8888
ENTRYPOINT ["tini", "-g", "--"]
CMD ["start-notebook.sh"]